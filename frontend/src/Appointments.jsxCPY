import React, { useEffect, useState } from 'react';
import api from './api';

function Appointments() {
  const [appointments, setAppointments] = useState([]);
  const [form, setForm] = useState({ customer: '', service: '', date: '', duration: '' });
  const [editingId, setEditingId] = useState(null);

  useEffect(() => {
    fetchAppointments();
  }, []);

  const fetchAppointments = async () => {
    const res = await api.get('/appointments');
    setAppointments(res.data);
  };

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleAdd = async () => {
    if (!form.customer || !form.service || !form.date || !form.duration) return;
    const res = await api.post('/appointments', { ...form, status: 'booked' });
    setAppointments([...appointments, res.data]);
    setForm({ customer: '', service: '', date: '', duration: '' });
  };

  const handleDelete = async (id) => {
    await api.delete(`/appointments/${id}`);
    setAppointments(appointments.filter(a => a.id !== id));
  };

  const handleUpdateStatus = async (id, newStatus) => {
    const appt = appointments.find(a => a.id === id);
    const res = await api.put(`/appointments/${id}`, {
      ...appt,
      status: newStatus
    });
    setAppointments(appointments.map(a => a.id === id ? res.data : a));
  };

  const handleEdit = (appt) => {
    setForm({
      customer: appt.customer,
      service: appt.service,
      date: appt.date.slice(0, 16),
      duration: appt.duration || ''
    });
    setEditingId(appt.id);
  };

  const handleSaveEdit = async () => {
    const res = await api.put(`/appointments/${editingId}`, form);
    setAppointments(appointments.map(a => a.id === editingId ? res.data : a));
    setForm({ customer: '', service: '', date: '', duration: '' });
    setEditingId(null);
  };

  const formatDate = (datetime) => {
    const d = new Date(datetime);
    return d.toLocaleDateString();
  };

  const formatTime = (datetime) => {
    const d = new Date(datetime);
    return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
  };

  const getStatusStyle = (status) => {
    switch (status.toLowerCase()) {
      case 'completed': return { color: 'green' };
      case 'canceled': return { color: 'red' };
      case 'no-show': return { color: 'orange' };
      default: return { color: 'blue' };
    }
  };

  return (
    <div style={{ padding: '1rem' }}>
      <h2>Appointments</h2>

      <div style={{ marginBottom: '1rem' }}>
        <input name="customer" placeholder="Customer" value={form.customer} onChange={handleChange} />
        <input name="service" placeholder="Service" value={form.service} onChange={handleChange} />
        <input name="duration" type="number" placeholder="Duration (min)" value={form.duration} onChange={handleChange} />
        <input name="date" type="datetime-local" value={form.date} onChange={handleChange} />
        {editingId ? (
          <button onClick={handleSaveEdit}>Save</button>
        ) : (
          <button onClick={handleAdd}>Add</button>
        )}
      </div>

      <table border="1" cellPadding="8" cellSpacing="0" style={{ width: '100%', borderCollapse: 'collapse' }}>
        <thead>
          <tr>
            <th>Date</th>
            <th>Time</th>
            <th>Client</th>
            <th>Service</th>
            <th>Duration</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {appointments.map(appt => (
            <tr key={appt.id}>
              <td>{formatDate(appt.date)}</td>
              <td>{formatTime(appt.date)}</td>
              <td>{appt.customer}</td>
              <td>{appt.service}</td>
              <td>{appt.duration} min</td>
              <td style={getStatusStyle(appt.status)}>{appt.status}</td>
              <td>
                <button title="Complete" onClick={() => handleUpdateStatus(appt.id, 'completed')}>✔</button>
                <button title="No Show" onClick={() => handleUpdateStatus(appt.id, 'no-show')}>🚫</button>
                <button title="Delete" onClick={() => handleDelete(appt.id)}>🗑</button>
                <button title="Edit" onClick={() => handleEdit(appt)}>✏️</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default Appointments;
